#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define ALPHABET_SIZE 26
void encrypt(char *plaintext, char *ciphertext, const char *key) {
    for (int i = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            char offset = isupper(plaintext[i]) ? 'A' : 'a';
            ciphertext[i] = key[toupper(plaintext[i]) - 'A'] - ('A' - offset);
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[strlen(plaintext)] = '\0';
}

void decrypt(char *ciphertext, char *plaintext, const char *key) {
    char reverseKey[ALPHABET_SIZE];
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        reverseKey[key[i] - 'A'] = 'A' + i;
    }
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char offset = isupper(ciphertext[i]) ? 'A' : 'a';
            plaintext[i] = reverseKey[toupper(ciphertext[i]) - 'A'] - ('A' - offset);
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[strlen(ciphertext)] = '\0'; 
}
int main() {
    char plaintext[100], ciphertext[100];
    char key[ALPHABET_SIZE + 1] = "QWERTYUIOPASDFGHJKLZXCVBNM"; 
    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0'; 
    encrypt(plaintext, ciphertext, key);
    printf("Ciphertext: %s\n", ciphertext);
    decrypt(ciphertext, plaintext, key);
    printf("Decrypted text: %s\n", plaintext);
    return 0;
}

